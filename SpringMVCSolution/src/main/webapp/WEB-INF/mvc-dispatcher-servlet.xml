<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:mvc="http://www.springframework.org/schema/mvc" xmlns:tx="http://www.springframework.org/schema/tx"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
        http://www.springframework.org/schema/beans/spring-beans.xsd
        http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc.xsd http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx.xsd">

    <context:component-scan base-package="com.alexey.mvc"/>
    <mvc:annotation-driven />

    <!-- Allow Spring to return HTML, not only JSP -->
    <mvc:default-servlet-handler/>

    <!-- Serve static files -->
    <mvc:resources mapping="/js/**" location="/js/" />

    <!-- Allows querying database, with parameters specified as ":parameter_name" -->
    <bean class="org.springframework.jdbc.core.namedparam.NamedParameterJdbcTemplate"
          name="template">
        <constructor-arg name="dataSource" ref="dataSource" />
    </bean>


    <!-- Allows querying database, with parameters specified as "?" -->
    <bean class="org.springframework.jdbc.core.JdbcTemplate"
          name="jdbcTemplate">
        <constructor-arg name="dataSource" ref = "dataSource" />
    </bean>

    <!-- Nicer syntax for inserts -->
    <bean class = "org.springframework.jdbc.core.simple.SimpleJdbcInsert"
          name="userInserter">
        <constructor-arg name="dataSource" ref="dataSource" />
        <!-- Must specify table name -->
        <property name="tableName" value="users" />
        <!-- Must specify which column holds the autogenerated id -->
        <property name="generatedKeyName" value="id" />
    </bean>

    <!-- Connection to the DB -->
    <bean name = "dataSource"
            class ="org.springframework.jdbc.datasource.DriverManagerDataSource">
        <property name="driverClassName" value="${db.driver}" />
        <property name="url" value="${db.host}" />
        <property name="username" value = "${db.username}" />
        <property name="password" value = "" />
    </bean>



    <bean id="entityManagerFactory"
          class="org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean"
          destroy-method="destroy">
        <property name="dataSource" ref="dataSource" />

        <property name="jpaVendorAdapter">
            <bean class="org.springframework.orm.jpa.vendor.HibernateJpaVendorAdapter">
                <property name="showSql" value="true" />
                <property name="databasePlatform" value="org.hibernate.dialect.MySQLDialect" />
            </bean>
        </property>
    </bean>

    <bean id="transactionManager" class="org.springframework.orm.jpa.JpaTransactionManager">
        <property name="entityManagerFactory" ref="entityManagerFactory" />
    </bean>

    <tx:annotation-driven />



    <!-- Specifies where configuration is located -->
    <context:property-placeholder location="classpath:db.properties" />

    <bean class="org.springframework.web.servlet.view.InternalResourceViewResolver">
        <property name="prefix" value="/WEB-INF/pages/"/>
        <property name="suffix" value=".html"/>
    </bean>

</beans>